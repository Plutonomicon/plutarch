{
  pkgs = hackage:
    {
      packages = {
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.split-base = true;
        "wcwidth".flags.cli = false;
        "old-time".revision = (((hackage."old-time")."1.1.0.3").revisions).default;
        "ghc-boot".revision = (((hackage."ghc-boot")."9.2.1").revisions).default;
        "tf-random".revision = (((hackage."tf-random")."0.5").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.2.0").revisions).default;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "cborg".revision = (((hackage."cborg")."0.2.6.0").revisions).default;
        "cborg".flags.optimize-gmp = true;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.16.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "cassava".revision = (((hackage."cassava")."0.5.2.0").revisions).default;
        "cassava".flags.bytestring--lt-0_10_4 = false;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "text".revision = (((hackage."text")."1.2.5.0").revisions).default;
        "Stream".revision = (((hackage."Stream")."0.4.7.2").revisions).default;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "invariant".revision = (((hackage."invariant")."0.5.5").revisions).default;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "parser-combinators".revision = (((hackage."parser-combinators")."1.3.0").revisions).default;
        "parser-combinators".flags.dev = false;
        "vector".revision = (((hackage."vector")."0.12.3.1").revisions).default;
        "vector".flags.internalchecks = false;
        "vector".flags.wall = false;
        "vector".flags.boundschecks = true;
        "vector".flags.unsafechecks = false;
        "erf".revision = (((hackage."erf")."2.0.0.0").revisions).default;
        "lens".revision = (((hackage."lens")."5.1").revisions).default;
        "lens".flags.test-templates = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.test-properties = true;
        "lens".flags.j = false;
        "lens".flags.trustworthy = true;
        "lens".flags.test-hunit = true;
        "lens".flags.dump-splices = false;
        "lens".flags.inlining = true;
        "some".revision = (((hackage."some")."1.0.3").revisions).default;
        "some".flags.newtype-unsafe = true;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.containers = true;
        "comonad".flags.distributive = true;
        "comonad".flags.indexed-traversable = true;
        "profunctors".revision = (((hackage."profunctors")."5.6.2").revisions).default;
        "extra".revision = (((hackage."extra")."1.7.10").revisions).default;
        "base-compat".revision = (((hackage."base-compat")."0.12.1").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.5").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "ghc".revision = (((hackage."ghc")."9.2.1").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.12.1").revisions).default;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "tasty-quickcheck".revision = (((hackage."tasty-quickcheck")."0.10.2").revisions).default;
        "th-lift-instances".revision = (((hackage."th-lift-instances")."0.1.19").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.6.0.0").revisions).default;
        "mtl-compat".revision = (((hackage."mtl-compat")."0.2.2").revisions).default;
        "mtl-compat".flags.two-point-two = false;
        "mtl-compat".flags.two-point-one = false;
        "sop-core".revision = (((hackage."sop-core")."0.5.0.2").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.2").revisions).default;
        "quickcheck-io".revision = (((hackage."quickcheck-io")."0.2.0").revisions).default;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "constraints-extras".revision = (((hackage."constraints-extras")."0.3.2.1").revisions).default;
        "constraints-extras".flags.build-readme = true;
        "tasty".revision = (((hackage."tasty")."1.4.2.1").revisions).default;
        "tasty".flags.clock = true;
        "tasty".flags.unix = true;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "OneTuple".revision = (((hackage."OneTuple")."0.3.1").revisions).default;
        "serialise".revision = (((hackage."serialise")."0.2.4.0").revisions).default;
        "serialise".flags.newtime15 = true;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.11.1.0").revisions).default;
        "list-t".revision = (((hackage."list-t")."1.0.5.1").revisions).default;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.slow = false;
        "reflection".flags.template-haskell = true;
        "newtype".revision = (((hackage."newtype")."0.2.2.0").revisions).default;
        "barbies".revision = (((hackage."barbies")."2.0.3.1").revisions).default;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "aeson".revision = (((hackage."aeson")."2.0.3.0").revisions).default;
        "aeson".flags.ordered-keymap = true;
        "aeson".flags.cffi = false;
        "nothunks".revision = (((hackage."nothunks")."0.1.3").revisions).default;
        "nothunks".flags.bytestring = true;
        "nothunks".flags.text = true;
        "nothunks".flags.vector = true;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.4").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "attoparsec".revision = (((hackage."attoparsec")."0.14.4").revisions).default;
        "attoparsec".flags.developer = false;
        "th-compat".revision = (((hackage."th-compat")."0.1.3").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "th-lift".revision = (((hackage."th-lift")."0.8.2").revisions).default;
        "dec".revision = (((hackage."dec")."0.0.4").revisions).default;
        "terminal-size".revision = (((hackage."terminal-size")."0.3.2.1").revisions).default;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "stm".revision = (((hackage."stm")."2.5.0.0").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "testing-type-modifiers".revision = (((hackage."testing-type-modifiers")."0.1.0.1").revisions).default;
        "semigroups".revision = (((hackage."semigroups")."0.20").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.tagged = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.transformers = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "semigroups".flags.hashable = true;
        "free".revision = (((hackage."free")."5.1.7").revisions).default;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.5").revisions).default;
        "haskell-lexer".revision = (((hackage."haskell-lexer")."1.1").revisions).default;
        "microlens".revision = (((hackage."microlens")."0.4.12.0").revisions).default;
        "ghc-heap".revision = (((hackage."ghc-heap")."9.2.1").revisions).default;
        "resourcet".revision = (((hackage."resourcet")."1.2.4.3").revisions).default;
        "wl-pprint-annotated".revision = (((hackage."wl-pprint-annotated")."0.1.0.1").revisions).default;
        "canonical-json".revision = (((hackage."canonical-json")."0.6.0.0").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.12").revisions).default;
        "universe-base".revision = (((hackage."universe-base")."1.1.3").revisions).default;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "type-equality".revision = (((hackage."type-equality")."1").revisions).default;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "dependent-map".revision = (((hackage."dependent-map")."0.4.0.0").revisions).default;
        "generics-sop".revision = (((hackage."generics-sop")."0.5.1.2").revisions).default;
        "tasty-hedgehog".revision = (((hackage."tasty-hedgehog")."1.1.0.0").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.8.0").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."9.2.1").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.2").revisions).default;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "lazy-search".revision = (((hackage."lazy-search")."0.1.2.1").revisions).default;
        "text-short".revision = (((hackage."text-short")."0.1.5").revisions).default;
        "text-short".flags.asserts = false;
        "bin".revision = (((hackage."bin")."0.1.2").revisions).default;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.11").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.3").revisions).default;
        "lifted-async".revision = (((hackage."lifted-async")."0.10.2.2").revisions).default;
        "base".revision = (((hackage."base")."4.16.0.0").revisions).default;
        "time".revision = (((hackage."time")."1.11.1.1").revisions).default;
        "formatting".revision = (((hackage."formatting")."7.1.3").revisions).default;
        "async".revision = (((hackage."async")."2.2.4").revisions).default;
        "async".flags.bench = false;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.9").revisions).default;
        "random".revision = (((hackage."random")."1.2.1").revisions).default;
        "ral".revision = (((hackage."ral")."0.2.1").revisions).default;
        "ral".flags.adjunctions = true;
        "ral".flags.semigroupoids = true;
        "ral".flags.distributive = true;
        "th-orphans".revision = (((hackage."th-orphans")."0.13.12").revisions).default;
        "process".revision = (((hackage."process")."1.6.13.2").revisions).default;
        "megaparsec".revision = (((hackage."megaparsec")."9.2.0").revisions).default;
        "megaparsec".flags.dev = false;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.2.0").revisions).default;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.6").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.properties = true;
        "vector-algorithms".flags.boundschecks = true;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.bench = true;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.3.0").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.7").revisions).default;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.comonad = true;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.8").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "quickcheck-instances".revision = (((hackage."quickcheck-instances")."0.3.27").revisions).default;
        "quickcheck-instances".flags.bytestring-builder = false;
        "bimap".revision = (((hackage."bimap")."0.4.0").revisions).default;
        "dependent-sum-template".revision = (((hackage."dependent-sum-template")."0.1.1.1").revisions).default;
        "rank2classes".revision = (((hackage."rank2classes")."1.4.4").revisions).default;
        "rank2classes".flags.use-template-haskell = true;
        "logict".revision = (((hackage."logict")."0.7.0.3").revisions).default;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "split".revision = (((hackage."split")."0.2.3.4").revisions).default;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.6").revisions).default;
        "lazysmallcheck".revision = (((hackage."lazysmallcheck")."0.6").revisions).default;
        "ghc-bignum".revision = (((hackage."ghc-bignum")."1.2").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6.1").revisions).default;
        "time-compat".flags.old-locale = false;
        "setenv".revision = (((hackage."setenv")."0.1.1.3").revisions).default;
        "typed-process".revision = (((hackage."typed-process")."0.2.8.0").revisions).default;
        "deriving-aeson".revision = (((hackage."deriving-aeson")."0.2.8").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.3.0").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.2").revisions).default;
        "concurrent-output".revision = (((hackage."concurrent-output")."1.10.15").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "half".revision = (((hackage."half")."0.3.1").revisions).default;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.17.0.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "constraints".revision = (((hackage."constraints")."0.13.3").revisions).default;
        "lifted-base".revision = (((hackage."lifted-base")."0.2.3.12").revisions).default;
        "clock".revision = (((hackage."clock")."0.8.3").revisions).default;
        "clock".flags.llvm = false;
        "th-expand-syns".revision = (((hackage."th-expand-syns")."0.4.9.0").revisions).default;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "prettyprinter".revision = (((hackage."prettyprinter")."1.7.1").revisions).default;
        "prettyprinter".flags.buildreadme = false;
        "prettyprinter".flags.text = true;
        "rts".revision = (((hackage."rts")."1.0.2").revisions).default;
        "monad-control".revision = (((hackage."monad-control")."1.0.3.1").revisions).default;
        "semialign".revision = (((hackage."semialign")."1.2.0.1").revisions).default;
        "semialign".flags.semigroupoids = true;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "template-haskell".revision = (((hackage."template-haskell")."2.18.0.0").revisions).default;
        "ghci".revision = (((hackage."ghci")."9.2.1").revisions).default;
        "pretty-show".revision = (((hackage."pretty-show")."1.10").revisions).default;
        "tasty-golden".revision = (((hackage."tasty-golden")."2.3.5").revisions).default;
        "tasty-golden".flags.build-example = false;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.3").revisions).default;
        "witherable".revision = (((hackage."witherable")."0.4.2").revisions).default;
        "syb".revision = (((hackage."syb")."0.7.2.1").revisions).default;
        "dom-lt".revision = (((hackage."dom-lt")."0.2.3").revisions).default;
        "th-reify-many".revision = (((hackage."th-reify-many")."0.1.10").revisions).default;
        "tasty-hunit".revision = (((hackage."tasty-hunit")."0.10.0.3").revisions).default;
        "algebraic-graphs".revision = (((hackage."algebraic-graphs")."0.6").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.6.0").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "composition-prelude".revision = (((hackage."composition-prelude")."3.0.0.2").revisions).default;
        "composition-prelude".flags.development = false;
        "th-utilities".revision = (((hackage."th-utilities")."0.2.4.3").revisions).default;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11.1").revisions).default;
        "ansi-terminal".flags.example = false;
        "dictionary-sharing".revision = (((hackage."dictionary-sharing")."0.1.0.0").revisions).default;
        "monoidal-containers".revision = (((hackage."monoidal-containers")."0.6.2.0").revisions).default;
        "monoidal-containers".flags.split-these = true;
        "hedgehog".revision = (((hackage."hedgehog")."1.1.1").revisions).default;
        "double-conversion".revision = (((hackage."double-conversion")."2.0.4.1").revisions).default;
        "double-conversion".flags.developer = false;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "deriving-compat".revision = (((hackage."deriving-compat")."0.6").revisions).default;
        "deriving-compat".flags.new-functor-classes = true;
        "deriving-compat".flags.template-haskell-2-11 = true;
        "deriving-compat".flags.base-4-9 = true;
        "fin".revision = (((hackage."fin")."0.2.1").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.4.0.2").revisions).default;
        "hashable".flags.containers = true;
        "hashable".flags.random-initial-seed = false;
        "hashable".flags.integer-gmp = true;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.1").revisions).default;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.7.1").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.mtl = true;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.generic-deriving = true;
        "dependent-sum".revision = (((hackage."dependent-sum")."0.7.1.0").revisions).default;
        "recursion-schemes".revision = (((hackage."recursion-schemes")."5.2.2.2").revisions).default;
        "recursion-schemes".flags.template-haskell = true;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1.1").revisions).default;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.bytestring-builder = false;
        "scientific".flags.integer-simple = false;
        "binary".revision = (((hackage."binary")."0.8.9.0").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "boring".revision = (((hackage."boring")."0.2").revisions).default;
        "boring".flags.tagged = true;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.2").revisions).default;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "containers".revision = (((hackage."containers")."0.6.5.1").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.2").revisions).default;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        };
      compiler = {
        version = "9.2.1";
        nix-name = "ghc921";
        packages = {
          "ghc-boot" = "9.2.1";
          "pretty" = "1.1.3.6";
          "text" = "1.2.5.0";
          "array" = "0.5.4.0";
          "ghc" = "9.2.1";
          "Cabal" = "3.6.0.0";
          "mtl" = "2.2.2";
          "parsec" = "3.1.14.0";
          "bytestring" = "0.11.1.0";
          "filepath" = "1.4.2.1";
          "stm" = "2.5.0.0";
          "terminfo" = "0.4.1.5";
          "ghc-heap" = "9.2.1";
          "ghc-prim" = "0.8.0";
          "ghc-boot-th" = "9.2.1";
          "base" = "4.16.0.0";
          "time" = "1.11.1.1";
          "process" = "1.6.13.2";
          "ghc-bignum" = "1.2";
          "directory" = "1.3.6.2";
          "exceptions" = "0.10.4";
          "hpc" = "0.6.1.0";
          "rts" = "1.0.2";
          "transformers" = "0.5.6.2";
          "template-haskell" = "2.18.0.0";
          "ghci" = "9.2.1";
          "deepseq" = "1.4.6.0";
          "unix" = "2.7.2.2";
          "integer-gmp" = "1.1";
          "binary" = "0.8.9.0";
          "containers" = "0.6.5.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        plutarch-test = ./.plan.nix/plutarch-test.nix;
        plutus-tx = ./.plan.nix/plutus-tx.nix;
        cardano-prelude = ./.plan.nix/cardano-prelude.nix;
        hspec-contrib = ./.plan.nix/hspec-contrib.nix;
        plutus-core = ./.plan.nix/plutus-core.nix;
        hspec-core = ./.plan.nix/hspec-core.nix;
        foundation = ./.plan.nix/foundation.nix;
        plutus-ledger-api = ./.plan.nix/plutus-ledger-api.nix;
        cryptonite = ./.plan.nix/cryptonite.nix;
        hspec-golden = ./.plan.nix/hspec-golden.nix;
        memory = ./.plan.nix/memory.nix;
        hspec-hedgehog = ./.plan.nix/hspec-hedgehog.nix;
        hspec-discover = ./.plan.nix/hspec-discover.nix;
        cardano-crypto-class = ./.plan.nix/cardano-crypto-class.nix;
        flat = ./.plan.nix/flat.nix;
        plutarch-extra = ./.plan.nix/plutarch-extra.nix;
        th-extras = ./.plan.nix/th-extras.nix;
        word-array = ./.plan.nix/word-array.nix;
        plutarch = ./.plan.nix/plutarch.nix;
        protolude = ./.plan.nix/protolude.nix;
        hspec = ./.plan.nix/hspec.nix;
        size-based = ./.plan.nix/size-based.nix;
        cardano-crypto = ./.plan.nix/cardano-crypto.nix;
        basement = ./.plan.nix/basement.nix;
        prettyprinter-configurable = ./.plan.nix/prettyprinter-configurable.nix;
        cardano-binary = ./.plan.nix/cardano-binary.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "plutarch-test" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "plutus-tx" = { flags = {}; };
          "cardano-prelude" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "hspec-contrib" = { flags = {}; };
          "plutus-core" = { flags = {}; };
          "hspec-core" = { flags = {}; };
          "foundation" = {
            flags = {
              "linktest" = lib.mkOverride 900 false;
              "bounds-check" = lib.mkOverride 900 false;
              "bench-all" = lib.mkOverride 900 false;
              "experimental" = lib.mkOverride 900 false;
              "doctest" = lib.mkOverride 900 false;
              "minimal-deps" = lib.mkOverride 900 false;
              };
            };
          "plutus-ledger-api" = { flags = {}; };
          "cryptonite" = {
            flags = {
              "check_alignment" = lib.mkOverride 900 false;
              "support_sse" = lib.mkOverride 900 false;
              "use_target_attributes" = lib.mkOverride 900 true;
              "support_deepseq" = lib.mkOverride 900 true;
              "support_rdrand" = lib.mkOverride 900 true;
              "old_toolchain_inliner" = lib.mkOverride 900 false;
              "integer-gmp" = lib.mkOverride 900 true;
              "support_pclmuldq" = lib.mkOverride 900 false;
              "support_aesni" = lib.mkOverride 900 true;
              };
            };
          "hspec-golden" = { flags = {}; };
          "memory" = {
            flags = {
              "support_basement" = lib.mkOverride 900 true;
              "support_deepseq" = lib.mkOverride 900 true;
              "support_bytestring" = lib.mkOverride 900 true;
              "support_foundation" = lib.mkOverride 900 true;
              };
            };
          "hspec-hedgehog" = { flags = {}; };
          "hspec-discover" = { flags = {}; };
          "cardano-crypto-class" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "flat" = { flags = {}; };
          "plutarch-extra" = { flags = {}; };
          "th-extras" = { flags = {}; };
          "word-array" = { flags = {}; };
          "plutarch" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          "protolude" = { flags = { "dev" = lib.mkOverride 900 false; }; };
          "hspec" = { flags = {}; };
          "size-based" = { flags = {}; };
          "cardano-crypto" = {
            flags = {
              "golden-tests-exe" = lib.mkOverride 900 false;
              "golden-tests" = lib.mkOverride 900 false;
              };
            };
          "basement" = { flags = {}; };
          "prettyprinter-configurable" = { flags = {}; };
          "cardano-binary" = {
            flags = { "development" = lib.mkOverride 900 false; };
            };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "hspec-core".components.library.planned = lib.mkOverride 900 true;
          "foundation".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "plutarch".components.library.planned = lib.mkOverride 900 true;
          "deriving-aeson".components.library.planned = lib.mkOverride 900 true;
          "tasty-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "lazy-search".components.library.planned = lib.mkOverride 900 true;
          "bin".components.library.planned = lib.mkOverride 900 true;
          "th-orphans".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "bimap".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "barbies".components.library.planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "hedgehog".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "ral".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "hspec-golden".components.exes."hgold".planned = lib.mkOverride 900 true;
          "plutus-tx".components.sublibs."plutus-tx-testlib".planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-io".components.library.planned = lib.mkOverride 900 true;
          "hspec-hedgehog".components.library.planned = lib.mkOverride 900 true;
          "dec".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "composition-prelude".components.library.planned = lib.mkOverride 900 true;
          "plutarch-extra".components.sublibs."plutarch-preludes".planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "mtl-compat".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."uplc".planned = lib.mkOverride 900 true;
          "cborg".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "sop-core".components.library.planned = lib.mkOverride 900 true;
          "serialise".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "size-based".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "hspec-golden".components.library.planned = lib.mkOverride 900 true;
          "plutarch-test".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum-template".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-instances".components.library.planned = lib.mkOverride 900 true;
          "plutarch-extra".components.library.planned = lib.mkOverride 900 true;
          "canonical-json".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-class".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "boring".components.library.planned = lib.mkOverride 900 true;
          "th-extras".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.exes."hspec-discover".planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "nothunks".components.library.planned = lib.mkOverride 900 true;
          "hspec-contrib".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "flat".components.library.planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "cryptonite".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "word-array".components.library.planned = lib.mkOverride 900 true;
          "concurrent-output".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "cardano-prelude".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.setup.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "deriving-compat".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "fin".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "th-expand-syns".components.library.planned = lib.mkOverride 900 true;
          "half".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."plutus-core-testlib".planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "setenv".components.library.planned = lib.mkOverride 900 true;
          "lifted-base".components.library.planned = lib.mkOverride 900 true;
          "lazysmallcheck".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "ghc-bignum".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "recursion-schemes".components.library.planned = lib.mkOverride 900 true;
          "Stream".components.library.planned = lib.mkOverride 900 true;
          "memory".components.library.planned = lib.mkOverride 900 true;
          "typed-process".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "newtype".components.library.planned = lib.mkOverride 900 true;
          "dictionary-sharing".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "th-utilities".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "hspec".components.library.planned = lib.mkOverride 900 true;
          "cardano-binary".components.library.planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.library.planned = lib.mkOverride 900 true;
          "tf-random".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."index-envs".planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "monoidal-containers".components.library.planned = lib.mkOverride 900 true;
          "dom-lt".components.library.planned = lib.mkOverride 900 true;
          "witherable".components.library.planned = lib.mkOverride 900 true;
          "rank2classes".components.setup.planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "erf".components.library.planned = lib.mkOverride 900 true;
          "generics-sop".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx".components.library.planned = lib.mkOverride 900 true;
          "tasty-hedgehog".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-annotated".components.library.planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "rank2classes".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "double-conversion".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."pir".planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "protolude".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.sublibs."attoparsec-internal".planned = lib.mkOverride 900 true;
          "cassava".components.library.planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "universe-base".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "plutarch-test".components.exes."plutarch-test".planned = lib.mkOverride 900 true;
          "lifted-async".components.library.planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "formatting".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."plc".planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "th-reify-many".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "basement".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."traceToStacks".planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "testing-type-modifiers".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }