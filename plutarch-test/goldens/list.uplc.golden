pmatch program
  1.0.0
  ((\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   )))
     (\  ->
        force
          (force (force chooseList)

             (delay (\  -> force ))
             (delay ((\    ->   ) (force headList ) ( (force tailList ))))))
     [1,3,1]
     (\  -> error)
     (delay error))
phead program
  1.0.0
  (equalsInteger
     1
     ((\ ->  (\  -> ) (delay error))
        ((\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   )))
           (\  ->
              force
                (force (force chooseList)

                   (delay (\  -> force ))
                   (delay
                      ((\    ->   ) (force headList ) ( (force tailList ))))))
           [1,2,3,4,5,6,7,8,9,10])))
ptail program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->

                       (\   ->

                            (\  ->

                                 (\  ->
                                    force
                                      (force ifThenElse
                                         (equalsInteger  )
                                         (delay (  ))
                                         (delay False)))
                                 (delay False))
                            (delay ( (\  -> False) (delay True))))
                       ( [2,3,4,5,6,7,8,9,10])
                       ((\ ->  (\  -> ) (delay error))
                          ( [1,2,3,4,5,6,7,8,9,10])))
                    (
                       (\  ->
                          force
                            (  (delay (\  -> force )) (delay ( ( ) ( ( ))))))))
                 (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
              (force (force chooseList)))
           (\    ->   ))
        (force headList))
     (force tailList))
pnull.empty program
  1.0.0
  ((\ ->  (\  -> False) (delay True))
     ((\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   )))
        (\  ->
           force
             (force (force chooseList)

                (delay (\  -> force ))
                (delay ((\    ->   ) (force headList ) ( (force tailList ))))))
        []))
pnull.nonempty program
  1.0.0
  ((\ -> force ifThenElse  False True)
     ((\ ->  (\  -> False) (delay True))
        ((\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   )))
           (\  ->
              force
                (force (force chooseList)

                   (delay (\  -> force ))
                   (delay
                      ((\    ->   ) (force headList ) ( (force tailList ))))))
           [1,2,3,4,5,6,7,8,9,10])))
pconcat.identity program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->
                     (\ ->
                        (\ ->
                           (\ ->
                              (\ ->
                                 force
                                   ((\  ->    (delay False))
                                      (
                                         ( ( ) (\  -> force ))
                                         ( (\  -> force ) ( )))
                                      (delay ( ( (\  -> force ) ( )) ( )))))
                                (
                                   (\   ->

                                        (\  ->

                                             (\  ->
                                                force
                                                  (
                                                     (equalsInteger  )
                                                     (delay (  ))
                                                     (delay False)))
                                             (delay False))
                                        (delay ( (\  -> False) (delay True))))))
                             (force ifThenElse))
                          (\  ->  (\  ->  (\  ->   ( )) (delay )) ))
                       (
                          (\  ->
                             force
                               (

                                  (delay (\  -> force ))
                                  (delay ( ( ) ( ( ))))))))
                    (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
                 (force (force chooseList)))
              (\    ->   ))
           (force headList))
        (force tailList))
     [1,2,3,4,5,6,7,8,9,10])
pmap.eg program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->

                       (\   ->

                            (\  ->

                                 (\  ->
                                    force
                                      (force ifThenElse
                                         (equalsInteger  )
                                         (delay (  ))
                                         (delay False)))
                                 (delay False))
                            (delay ( (\  -> False) (delay True))))
                       ((\ ->  (\  ->  (\  ->  ( ) ( )) (delay (\  -> force ))))
                          (\ -> addInteger  )
                          ( [1,2,3,4,5,6,7,8,9,10]))
                       ( [2,4,6,8,10,12,14,16,18,20]))
                    (
                       (\  ->
                          force
                            (  (delay (\  -> force )) (delay ( ( ) ( ( ))))))))
                 (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
              (force (force chooseList)))
           (\    ->   ))
        (force headList))
     (force tailList))
pmap.identity program
  1.0.0
  ((\ ->

        (\   ->

             (\  ->

                  (\  ->
                     force
                       (force ifThenElse
                          (equalsInteger  )
                          (delay (  ))
                          (delay False)))
                  (delay False))
             (delay ( (\  -> False) (delay True))))
        ((\ ->  (\  ->  (\  -> (\    ->   ) ( ) ( )) (delay (\  -> force ))))
           (\ -> )
           (\  -> force ))
        (\  -> force ))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
pfilter.evens program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->
                     (\ ->

                          (\   ->

                               (\  ->

                                    (\  ->
                                       force
                                         (
                                            (equalsInteger  )
                                            (delay (  ))
                                            (delay False)))
                                    (delay False))
                               (delay ( (\  -> False) (delay True))))
                          ((\ ->

                                (\  ->

                                     (\  ->
                                        force
                                          ( ( ) (delay (  ( ))) (delay ( ))))
                                     (delay (\  -> force ))))
                             (\ -> equalsInteger (modInteger  2) 0)
                             ( [1,2,3,4,5,6,7,8,9,10]))
                          ( [2,4,6,8,10]))
                       (force ifThenElse))
                    (
                       (\  ->
                          force
                            (  (delay (\  -> force )) (delay ( ( ) ( ( ))))))))
                 (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
              (force (force chooseList)))
           (\    ->   ))
        (force headList))
     (force tailList))
pfilter.gt5 program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->
                     (\ ->

                          (\   ->

                               (\  ->

                                    (\  ->
                                       force
                                         (
                                            (equalsInteger  )
                                            (delay (  ))
                                            (delay False)))
                                    (delay False))
                               (delay ( (\  -> False) (delay True))))
                          ((\ ->

                                (\  ->

                                     (\  ->
                                        force
                                          ( ( ) (delay (  ( ))) (delay ( ))))
                                     (delay (\  -> force ))))
                             (\ -> lessThanInteger 5 )
                             ( [1,2,3,4,5,6,7,8,9,10]))
                          ( [6,7,8,9,10]))
                       (force ifThenElse))
                    (
                       (\  ->
                          force
                            (  (delay (\  -> force )) (delay ( ( ) ( ( ))))))))
                 (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
              (force (force chooseList)))
           (\    ->   ))
        (force headList))
     (force tailList))
pzipWith.double program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            (\ ->
               (\ ->
                  (\ ->
                     (\ ->

                          (\   ->

                               (\  ->

                                    (\  ->
                                       force
                                         (force ifThenElse
                                            (equalsInteger  )
                                            (delay (  ))
                                            (delay False)))
                                    (delay False))
                               (delay ( (\  -> False) (delay True))))
                          (
                             (\   ->

                                  (\  ->

                                       (\  ->  (addInteger  ) (  ))
                                       (delay (\  -> force )))
                                  (delay (\  -> force )))
                             ( )
                             ( ))
                          ( [2,4,6,8,10,12,14,16,18,20]))
                       [1,2,3,4,5,6,7,8,9,10])
                    (
                       (\  ->
                          force
                            (  (delay (\  -> force )) (delay ( ( ) ( ( ))))))))
                 (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
              (force (force chooseList)))
           (\    ->   ))
        (force headList))
     (force tailList))
pfoldl.nonempty program
  1.0.0
  ((\ ->
      equalsInteger
        (
           (\   ->  (\  ->  (subtractInteger  ) ) (delay ))
           0
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              [1,2,3,4,5,6,7,8,9,10]))
        -55)
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
pfoldl.nonempty-primed program
  1.0.0
  ((\ ->
      equalsInteger
        (
           (\   ->  (\  ->  (subtractInteger  ) ) (delay ))
           0
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              [1,2,3,4,5,6,7,8,9,10]))
        -55)
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
pfoldl.empty program
  1.0.0
  ((\ ->
      equalsInteger
        (
           (\   ->  (\  ->  (subtractInteger  ) ) (delay ))
           0
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              []))
        0)
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
pfoldl.empty-primed program
  1.0.0
  ((\ ->
      equalsInteger
        (
           (\   ->  (\  ->  (subtractInteger  ) ) (delay ))
           0
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              []))
        0)
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
elemAt.elemAt_3_[1..10] program
  1.0.0
  ((\ ->
      (\ ->
         (\  ->
            force
              (
                 (lessThanInteger  0)
                 (delay
                    (force
                       (force trace "pelemAt: negative index" (delay error))))
                 (delay
                    (
                       (\   ->
                          force
                            (
                               (equalsInteger  0)
                               (delay ( (\  -> ) (delay error)))
                               (delay
                                  (
                                     (subtractInteger  1)
                                     ( (\  -> ) (delay error))))))

                       ))))
           3
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              [1,2,3,4,5,6,7,8,9,10]))
        (force ifThenElse))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
elemAt.elemAt_0_[1..10] program
  1.0.0
  ((\ ->
      (\ ->
         (\  ->
            force
              (
                 (lessThanInteger  0)
                 (delay
                    (force
                       (force trace "pelemAt: negative index" (delay error))))
                 (delay
                    (
                       (\   ->
                          force
                            (
                               (equalsInteger  0)
                               (delay ( (\  -> ) (delay error)))
                               (delay
                                  (
                                     (subtractInteger  1)
                                     ( (\  -> ) (delay error))))))

                       ))))
           0
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              [1,2,3,4,5,6,7,8,9,10]))
        (force ifThenElse))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
elemAt.elemAt_9_[1..10] program
  1.0.0
  ((\ ->
      (\ ->
         (\  ->
            force
              (
                 (lessThanInteger  0)
                 (delay
                    (force
                       (force trace "pelemAt: negative index" (delay error))))
                 (delay
                    (
                       (\   ->
                          force
                            (
                               (equalsInteger  0)
                               (delay ( (\  -> ) (delay error)))
                               (delay
                                  (
                                     (subtractInteger  1)
                                     ( (\  -> ) (delay error))))))

                       ))))
           9
           (
              (\  ->
                 force
                   (force (force chooseList)

                      (delay (\  -> force ))
                      (delay
                         ((\    ->   )
                            (force headList )
                            ( (force tailList ))))))
              [1,2,3,4,5,6,7,8,9,10]))
        (force ifThenElse))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
find.find_(==3)_[1..4] program
  1.0.0
  ((\ ->

        (\   ->

             (\  -> force (force ifThenElse ( ) (delay (\  ->  )) (delay (  ))))
             (delay (\  -> force )))
        (\ -> equalsInteger  3)
        (
           (\  ->
              force
                (force (force chooseList)

                   (delay (\  -> force ))
                   (delay
                      ((\    ->   ) (force headList ) ( (force tailList ))))))
           [1,2,3,4]))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
find.find_(==5)_[1..4] program
  1.0.0
  ((\ ->

        (\   ->

             (\  -> force (force ifThenElse ( ) (delay (\  ->  )) (delay (  ))))
             (delay (\  -> force )))
        (\ -> equalsInteger  5)
        (
           (\  ->
              force
                (force (force chooseList)

                   (delay (\  -> force ))
                   (delay
                      ((\    ->   ) (force headList ) ( (force tailList ))))))
           [1,2,3,4]))
     (\ -> (\ ->  (\ ->   )) (\ ->  (\ ->   ))))
x1+x2.builtin program
  1.0.0
  ((\ -> (\ -> addInteger ( (force tailList )) ( )) (force headList))
     [1,2,3,4,5])
x1+x2.pmatch program
  1.0.0
  ((\ ->
      (\ ->
         (\ ->
            force
              (

                 (delay error)
                 (delay
                    ((\ -> force (  (delay error) (delay (addInteger ( ) ( )))))
                       (force tailList )))))
           (force (force chooseList)))
        (force headList))
     [1,2,3,4,5])
uncons.ChooseList program
  1.0.0
  ((\ ->
      force (force (force chooseList)  (delay error) (delay (force tailList ))))
     [1,2,3,4,5])
uncons.head-and-tail program 1.0.0 ((\ -> (\ -> force tailList ) (force headList )) [1,2,3,4,5])
uncons.head-and-tail-and-null program
  1.0.0
  ((\ ->
      (\ ->
         force
           (force ifThenElse

              (delay error)
              (delay ((\ -> force tailList ) (force headList )))))
        (force nullList ))
     [1,2,3,4,5])