term (program
   1.0.0
   (Constr 0
      [ Constr 0
          [ List
              [ Constr 0
                  [ Constr 0 [Constr 0 [B #a0], I 0]
                  , Constr 0
                      [ Constr 0 [Constr 1 [B #a1], Constr 1 []]
                      , Map []
                      , Constr 1 [B #d0]
                      , Constr 1 [] ] ] ]
          , List []
          , List []
          , Map []
          , Map [(B #c0, Map [(B #736f6d65746f6b656e, I 1)])]
          , List []
          , Map []
          , Constr 0
              [ Constr 0 [Constr 0 [], Constr 1 []]
              , Constr 0 [Constr 2 [], Constr 1 []] ]
          , List [B #ab01fe235c, B #123014, B #abcdef]
          , Map []
          , Map []
          , Constr 0 [B #b0] ]
      , Constr 1 [Constr 0 [Constr 0 [B #a0], I 0]] ]))
get.txInfo (program
   1.0.0
   ((\i0 -> force headList (force (force sndPair) (unConstrData i1)))
      (Constr 0
         [ Constr 0
             [ List
                 [ Constr 0
                     [ Constr 0 [Constr 0 [B #a0], I 0]
                     , Constr 0
                         [ Constr 0 [Constr 1 [B #a1], Constr 1 []]
                         , Map []
                         , Constr 1 [B #d0]
                         , Constr 1 [] ] ] ]
             , List []
             , List []
             , Map []
             , Map [(B #c0, Map [(B #736f6d65746f6b656e, I 1)])]
             , List []
             , Map []
             , Constr 0
                 [ Constr 0 [Constr 0 [], Constr 1 []]
                 , Constr 0 [Constr 2 [], Constr 1 []] ]
             , List [B #ab01fe235c, B #123014, B #abcdef]
             , Map []
             , Map []
             , Constr 0 [B #b0] ]
         , Constr 1 [Constr 0 [Constr 0 [B #a0], I 0]] ])))
get.mint (program
   1.0.0
   ((\i0 ->
       (\i0 ->
          (\i0 ->
             (\i0 ->
                (\i0 -> i3 ((\i0 -> i3 (i3 (i3 (i3 i1)))) (i4 i1)))
                  ((\i0 -> i3 (i4 i1))
                     (Constr 0
                        [ Constr 0
                            [ List
                                [ Constr 0
                                    [ Constr 0 [Constr 0 [B #a0], I 0]
                                    , Constr 0
                                        [ Constr 0
                                            [Constr 1 [B #a1], Constr 1 []]
                                        , Map []
                                        , Constr 1 [B #d0]
                                        , Constr 1 [] ] ] ]
                            , List []
                            , List []
                            , Map []
                            , Map [(B #c0, Map [(B #736f6d65746f6b656e, I 1)])]
                            , List []
                            , Map []
                            , Constr 0
                                [ Constr 0 [Constr 0 [], Constr 1 []]
                                , Constr 0 [Constr 2 [], Constr 1 []] ]
                            , List [B #ab01fe235c, B #123014, B #abcdef]
                            , Map []
                            , Map []
                            , Constr 0 [B #b0] ]
                        , Constr 1 [Constr 0 [Constr 0 [B #a0], I 0]] ])))
               (force tailList))
            (force headList))
         (\i0 -> i2 (unConstrData i1)))
      (force (force sndPair))))
get.credentials (program
   1.0.0
   ((\i0 ->
       (\i0 ->
          (\i0 ->
             (\i0 ->
                (\i0 ->
                   (\i0 ->
                      (\i0 -> i2 (\i0 -> i2 i2 i1))
                        (\i0 -> i2 (\i0 -> i2 i2 i1)))
                     (\i0 i0 ->
                        force
                          (force (force chooseList)
                             i1
                             (delay [])
                             (delay (force mkCons (i3 (i5 i1)) (i2 (i4 i1)))))))
                  (\i0 ->
                     i3
                       (i5
                          (unConstrData
                             ((\i0 -> i4 (i5 i1))
                                ((\i0 -> i4 (i5 i1)) (i3 (i2 (i4 i1))))))))
                  ((\i0 -> unListData (i3 (i4 i1)))
                     ((\i0 -> i3 (i4 i1))
                        (Constr 0
                           [ Constr 0
                               [ List
                                   [ Constr 0
                                       [ Constr 0 [Constr 0 [B #a0], I 0]
                                       , Constr 0
                                           [ Constr 0
                                               [Constr 1 [B #a1], Constr 1 []]
                                           , Map []
                                           , Constr 1 [B #d0]
                                           , Constr 1 [] ] ] ]
                               , List []
                               , List []
                               , Map []
                               , Map
                                   [(B #c0, Map [(B #736f6d65746f6b656e, I 1)])]
                               , List []
                               , Map []
                               , Constr 0
                                   [ Constr 0 [Constr 0 [], Constr 1 []]
                                   , Constr 0 [Constr 2 [], Constr 1 []] ]
                               , List [B #ab01fe235c, B #123014, B #abcdef]
                               , Map []
                               , Map []
                               , Constr 0 [B #b0] ]
                           , Constr 1 [Constr 0 [Constr 0 [B #a0], I 0]] ]))))
               (force tailList))
            (force headList))
         (\i0 -> i2 (unConstrData i1)))
      (force (force sndPair))))
get.sym (program
   1.0.0
   ((\i0 ->
       (\i0 ->
          (\i0 ->
             (\i0 ->
                (\i0 ->
                   (\i0 ->
                      (\i0 ->
                         (\i0 ->
                            (\i0 ->
                               (\i0 ->
                                  (\i0 ->
                                     unBData
                                       ((\i0 -> i7 (i10 i1))
                                          ((\i0 ->
                                              (\i0 ->
                                                 i3
                                                   (\i0 ->
                                                      i2
                                                        (unMapData i1)
                                                        (\i0 ->
                                                           (\i0 i0 i0 -> i2 i3)
                                                             (mapData i1))
                                                        (delay
                                                           (\i0 i0 ->
                                                              force i1))))
                                                (\i0 ->
                                                   (\i0 ->
                                                      force
                                                        (i10
                                                           (force nullList i1)
                                                           (delay
                                                              (\i0 i0 ->
                                                                 force i1))
                                                           (delay
                                                              (\i0 i0 ->
                                                                 i2 i3))))
                                                     (i3
                                                        (\i0 ->
                                                           force
                                                             (i10
                                                                (equalsData
                                                                   i1
                                                                   (iData 0))
                                                                (delay
                                                                   (\i0 i0 ->
                                                                      force i1))
                                                                (delay
                                                                   (\i0 i0 ->
                                                                      i2 i3))))
                                                        i1))
                                                i1)
                                             (unMapData
                                                ((\i0 ->
                                                    i10
                                                      ((\i0 ->
                                                          i10
                                                            (i10
                                                               (i10 (i10 i1))))
                                                         (i11 i1)))
                                                   ((\i0 -> i10 (i11 i1))
                                                      (Constr 0
                                                         [ Constr 0
                                                             [ List
                                                                 [ Constr 0
                                                                     [ Constr 0
                                                                         [ Constr 0
                                                                             [ B #a0 ]
                                                                         , I 0 ]
                                                                     , Constr 0
                                                                         [ Constr 0
                                                                             [ Constr 1
                                                                                 [ B #a1 ]
                                                                             , Constr 1
                                                                                 [  ] ]
                                                                         , Map
                                                                             []
                                                                         , Constr 1
                                                                             [ B #d0 ]
                                                                         , Constr 1
                                                                             [  ] ] ] ]
                                                             , List []
                                                             , List []
                                                             , Map []
                                                             , Map
                                                                 [ ( B #c0
                                                                 , Map
                                                                     [ ( B #736f6d65746f6b656e
                                                                     , I 1 ) ] ) ]
                                                             , List []
                                                             , Map []
                                                             , Constr 0
                                                                 [ Constr 0
                                                                     [ Constr 0
                                                                         []
                                                                     , Constr 1
                                                                         [] ]
                                                                 , Constr 0
                                                                     [ Constr 2
                                                                         []
                                                                     , Constr 1
                                                                         [] ] ]
                                                             , List
                                                                 [ B #ab01fe235c
                                                                 , B #123014
                                                                 , B #abcdef ]
                                                             , Map []
                                                             , Map []
                                                             , Constr 0
                                                                 [B #b0] ]
                                                         , Constr 1
                                                             [ Constr 0
                                                                 [ Constr 0
                                                                     [B #a0]
                                                                 , I 0 ] ] ])))))))
                                    (\i0 i0 ->
                                       i3
                                         (\i0 i0 ->
                                            force
                                              (i6
                                                 i1
                                                 (delay i7)
                                                 (delay
                                                    ((\i0 ->
                                                        i5
                                                          (i15 (i13 i2))
                                                          (\i0 ->
                                                             i10
                                                               (mkPairData
                                                                  (i11 (i14 i3))
                                                                  i1)
                                                               i2)
                                                          (delay i1))
                                                       (i2 (i11 i1))))))
                                         i1))
                                 (\i0 ->
                                    (\i0 -> i2 (\i0 -> i2 i2 i1))
                                      (\i0 -> i2 (\i0 -> i2 i2 i1))))
                              (force (force chooseList)))
                           [])
                        (force mkCons))
                     (force (force fstPair)))
                  (force ifThenElse))
               (force tailList))
            (force headList))
         (\i0 -> i2 (unConstrData i1)))
      (force (force sndPair))))
ScriptPurpose.literal (program
   1.0.0
   (Constr 0
      [B #1111111111111111111111111111111111111111111111111111111111111111]))
ScriptPurpose.decode (program
   1.0.0
   ((\i0 ->
       (\i0 ->
          (\i0 ->
             force
               (force ifThenElse (equalsInteger 0 i2) (delay i1) (delay error)))
            (force (force sndPair) i2))
         (force (force fstPair) i1))
      (unConstrData
         (Constr 0
            [ B #1111111111111111111111111111111111111111111111111111111111111111 ]))))