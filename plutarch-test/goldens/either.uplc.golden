eq.true.left (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (\i0 -> False)) (\i0 -> i2 (\i0 -> False) (\i0 -> equalsInteger i2 i1))) (\i0 -> \i0 -> i2 42) (\i0 -> \i0 -> i2 42)))
eq.true.right (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (\i0 -> False)) (\i0 -> i2 (\i0 -> False) (\i0 -> equalsInteger i2 i1))) (\i0 -> \i0 -> i1 42) (\i0 -> \i0 -> i1 42)))
eq.false.left-right (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (\i0 -> False)) (\i0 -> i2 (\i0 -> False) (\i0 -> equalsInteger i2 i1))) (\i0 -> \i0 -> i2 42) (\i0 -> \i0 -> i1 42)))
eq.false.left-left (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (\i0 -> False)) (\i0 -> i2 (\i0 -> False) (\i0 -> equalsInteger i2 i1))) (\i0 -> \i0 -> i2 24) (\i0 -> \i0 -> i2 42)))
eq.false.right-right (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (\i0 -> False)) (\i0 -> i2 (\i0 -> False) (\i0 -> equalsInteger i2 i1))) (\i0 -> \i0 -> i1 24) (\i0 -> \i0 -> i1 42)))