{"files":{"Concepts.md":{"filePath":"Concepts.md","links":[{"resolvedRelTarget":{"contents":"Concepts/What%20is%20the%20S.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/What is the S.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Hoisting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Hoisting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Hoisting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Hoisting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This section describes various concepts applicable in Plutarch."},"tags":[]},"parentNote":"index.md","title":"Concepts","url":"Concepts.html"},"Concepts/Data and Scott encoding.md":{"filePath":"Concepts/Data and Scott encoding.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"In Plutus Core, there are really two (conflicting) ways to represent non-trivial ADTs: Constr data encoding, or Scott encoding. You should use only one of these representations for your non-trivial types."},"tags":[]},"parentNote":"Concepts.md","title":"Data and Scott encoding","url":"Concepts/Data%20and%20Scott%20encoding.html"},"Concepts/GenericProgramming.md":{"filePath":"Concepts/GenericProgramming.md","links":[],"meta":{"page":{"description":"A Term or ClosedTerm represents Plutus Lambda Calculus expression in Plutarch world. Allows for additional checks and safety compared to UPLC. See more: Plutarch Terms."},"tags":[]},"parentNote":"Concepts.md","title":"GenericProgramming","url":"Concepts/GenericProgramming.html"},"Concepts/Haskell Synonym.md":{"filePath":"Concepts/Haskell Synonym.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Representation%20of%20Plutarch%20type.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Representation of Plutarch type.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Several sections of the guide use the terminology Haskell synonym. What does it mean? It’s simply the Haskell type that is supposed to correspond to a Plutarch type. There doesn’t necessarily have to be some sort of concrete connection (though there can be, using PLift/PConstant) - it’s merely a connection you can establish mentally."},"tags":[]},"parentNote":"Concepts.md","title":"Haskell synonym of Plutarch types","url":"Concepts/Haskell%20Synonym.html"},"Concepts/Hoisting.md":{"filePath":"Concepts/Hoisting.md","links":[{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Delay%20and%20Force.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Delay and Force.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch has a two-stage compilation process. First GHC compiles our code, then our code generates an AST of our Plutus script, which is then serialized using compile."},"tags":[]},"parentNote":"Concepts.md","title":"Hoisting","url":"Concepts/Hoisting.html"},"Concepts/What is the S.md":{"filePath":"Concepts/What is the S.md","links":[],"meta":{"page":{"description":"The s essentially represents the context, and is like the s of ST."},"tags":[]},"parentNote":"Concepts.md","title":"What is the s?","url":"Concepts/What%20is%20the%20S.html"},"DEVGUIDE.md":{"filePath":"DEVGUIDE.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"README.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"README.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Looking to contribute to Plutarch? Looking for functionalities that are not currently provided by Plutarch from a safe interface? You’ve come to the right place!"},"tags":[]},"parentNote":"index.md","title":"DEVGUIDE","url":"DEVGUIDE.html"},"Introduction.md":{"filePath":"Introduction.md","links":[{"resolvedRelTarget":{"contents":"Introduction/Untyped%20Plutus%20Core.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Untyped Plutus Core.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Types.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Types.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Pattern%20matching.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Pattern matching.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Delay%20and%20Force.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Delay and Force.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch is an eDSL in Haskell for writing on-chain scripts for Cardano. With some caveats, Plutarch is a simply-typed lambda calculus (or STLC). Writing a script in Plutarch allows us to leverage the language features provided by Haskell while retaining the ability to compile to compact Untyped Plutus Core (or UPLC, which is an untyped lambda calculus)."},"tags":[]},"parentNote":"index.md","title":"Introduction","url":"Introduction.html"},"Introduction/Delay and Force.md":{"filePath":"Introduction/Delay and Force.md","links":[],"meta":{"page":{"description":"Plutarch, like UPLC, is strict by default; this is in contrast to Haskell, which is non-strict by default (often called lazy). This means that evaluating a function application in Plutarch (#) always evaluates the argument before executing the function."},"tags":[]},"parentNote":"Introduction.md","title":"Delay and Force","url":"Introduction/Delay%20and%20Force.html"},"Introduction/Pattern matching.md":{"filePath":"Introduction/Pattern matching.md","links":[],"meta":{"page":{"description":"We’ve shown how to construct Terms out of the data constructors of types with kind PType (i.e., pcon . PJust). Next, it is natural that we may want to pattern match on Term with a known PType tag (i.e., of a value with type Term s (PMaybe a)) to produce another Term (i.e., depending on whether the value matches PJust _ or Nothing.)"},"tags":[]},"parentNote":"Introduction.md","title":"Pattern matching","url":"Introduction/Pattern%20matching.html"},"Introduction/Plutarch Terms.md":{"filePath":"Introduction/Plutarch Terms.md","links":[{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch Terms are terms in the sense of simply-typed lambda calculus terms. In a lambda calculus, we can construct terms as either constants or lambdas, and terms can either be open (having free variables) or closed (having no free variables). We compose Plutarch Terms to build up increasingly complex computations. Once all free variables are eliminated from a Term (making it a Closed Term), we can compile it using the eponymous function from the Plutarch module:"},"tags":[]},"parentNote":"Introduction.md","title":"Plutarch Terms","url":"Introduction/Plutarch%20Terms.html"},"Introduction/Plutarch Terms/Plutarch Constants.md":{"filePath":"Introduction/Plutarch Terms/Plutarch Constants.md","links":[{"resolvedRelTarget":{"contents":"Types/PAsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PAsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"When evaluated, a constant Plutarch Term will always yield the same result. There are several ways of building constant Terms:"},"tags":[]},"parentNote":"Introduction/Plutarch Terms.md","title":"Plutarch Constants","url":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html"},"Introduction/Plutarch Terms/Plutarch Lambdas.md":{"filePath":"Introduction/Plutarch Terms/Plutarch Lambdas.md","links":[],"meta":{"page":{"description":"Lambdas are the second form of Plutarch Terms. Lambda terms are represented at the type level by the infix type constructor :-->; a value of type Term s (a :--> b) evaluates to a function that takes a value of type a and produces a value of type b."},"tags":[]},"parentNote":"Introduction/Plutarch Terms.md","title":"Plutarch Lambdas","url":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html"},"Introduction/Plutarch Types.md":{"filePath":"Introduction/Plutarch Types.md","links":[{"resolvedRelTarget":{"contents":"Tricks/Representation%20of%20Plutarch%20type.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Representation of Plutarch type.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"When this guide uses the term Plutarch Type we explicitly talk about a type of kind PType. We will refer to “ types of kind PType “ simply as PTypes. We explicitly qualify when referring to the kind PType."},"tags":[]},"parentNote":"Introduction.md","title":"Plutarch Types","url":"Introduction/Plutarch%20Types.html"},"Introduction/Untyped Plutus Core.md":{"filePath":"Introduction/Untyped Plutus Core.md","links":[{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch compiles to UPLC. Most Plutarch end-users will not need to concern themselves with the details of UPLC, but a brief overview will aid in building a mental model of how Plutarch works."},"tags":[]},"parentNote":"Introduction.md","title":"Untyped Plutus Core (UPLC)","url":"Introduction/Untyped%20Plutus%20Core.html"},"README.md":{"filePath":"README.md","links":[{"resolvedRelTarget":{"contents":"examples/VALIDATOR.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"examples/VALIDATOR.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"examples/BASIC.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"examples/BASIC.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Unsafe%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Unsafe functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Tracing.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Tracing.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Recursion.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Recursion.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Raising%20errors.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Raising errors.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Prelude%20mixin.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Prelude mixin.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/FFI.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/FFI.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20TermCont.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with TermCont.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20QualifiedDo.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with QualifiedDo.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Deriving%20with%20generics.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving with generics.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Deriving%20for%20newtypes.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving for newtypes.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Conditionals.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Conditionals.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Avoid%20work%20duplication%20using%20plet.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Avoid work duplication using plet.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PUnit.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PUnit.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PTuple.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PTuple.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PString.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PString.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PInteger.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PInteger.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PDataSum%20and%20PDataRecord.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PDataSum and PDataRecord.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PByteString.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PByteString.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBuiltinPair.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBuiltinPair.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBuiltinList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBuiltinList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBool.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBool.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PAsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PAsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PListLike.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PListLike.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIntegral.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIntegral.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Troubleshooting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Troubleshooting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/makeIsDataIndexed%2C%20Haskell%20ADTs%2C%20and%20PIsDataRepr.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/makeIsDataIndexed, Haskell ADTs, and PIsDataRepr.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Working%20with%20bound%20fields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Working with bound fields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Using%20Haskell%20level%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Using Haskell level functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Responsibility%20of%20evaluation%20in%20Haskell%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Responsibility of evaluation in Haskell functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Representation%20of%20Plutarch%20type.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Representation of Plutarch type.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20statically%20building%20constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer statically building constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20matching%20on%20pmatch%20result%20immediately.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer matching on pmatch result immediately.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20Plutarch%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer Plutarch functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Plutarch%20functions%20strict.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Plutarch functions strict.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Difference%20between%20pcon%20and%20pconstant.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Difference between pcon and pconstant.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Run.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Run.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Run.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Run.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Untyped%20Plutus%20Core.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Untyped Plutus Core.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Types.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Types.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Lambdas.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Lambdas.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms/Plutarch%20Constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms/Plutarch Constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Terms.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Terms.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Pattern%20matching.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Pattern matching.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Delay%20and%20Force.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Delay and Force.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/What%20is%20the%20S.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/What is the S.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Hoisting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Hoisting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Hoisting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Hoisting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"The Plutarch guide is your one-stop shop for getting up to speed on Plutarch!"},"tags":[]},"parentNote":"index.md","title":"README","url":"README.html"},"Run.md":{"filePath":"Run.md","links":[],"meta":{"page":{"description":"Note: If you spot any mistakes/have any related questions that this guide lacks the answer to, please don’t hesitate to raise an issue. The goal is to have high quality documentation for Plutarch users!"},"tags":[]},"parentNote":"index.md","title":"Run","url":"Run.html"},"Tricks.md":{"filePath":"Tricks.md","links":[{"resolvedRelTarget":{"contents":"Tricks/makeIsDataIndexed%2C%20Haskell%20ADTs%2C%20and%20PIsDataRepr.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/makeIsDataIndexed, Haskell ADTs, and PIsDataRepr.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Working%20with%20bound%20fields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Working with bound fields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Using%20Haskell%20level%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Using Haskell level functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Responsibility%20of%20evaluation%20in%20Haskell%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Responsibility of evaluation in Haskell functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Representation%20of%20Plutarch%20type.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Representation of Plutarch type.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20statically%20building%20constants.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer statically building constants.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20matching%20on%20pmatch%20result%20immediately.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer matching on pmatch result immediately.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Prefer%20Plutarch%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer Plutarch functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Plutarch%20functions%20strict.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Plutarch functions strict.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Difference%20between%20pcon%20and%20pconstant.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Difference between pcon and pconstant.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This document discusses various rules of thumb and general trivia, aiming to make life as a Plutarch user or auditor easier."},"tags":[]},"parentNote":"index.md","title":"Tricks","url":"Tricks.html"},"Tricks/Difference between pcon and pconstant.md":{"filePath":"Tricks/Difference between pcon and pconstant.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"PlutusType is especially useful for building up Plutarch terms dynamically - i.e. from arbitrary Plutarch terms. This is when your Plutarch type’s constructors contain other Plutarch terms."},"tags":[]},"parentNote":"Tricks.md","title":"Difference between pcon and pconstant","url":"Tricks/Difference%20between%20pcon%20and%20pconstant.html"},"Tricks/Don't duplicate work.md":{"filePath":"Tricks/Don't duplicate work.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Haskell bindings are simply inlined during Plutarch compilation."},"tags":[]},"parentNote":"Tricks.md","title":"Don't duplicate work","url":"Tricks/Don%27t%20duplicate%20work.html"},"Tricks/Optimizing unhoistable lambdas.md":{"filePath":"Tricks/Optimizing unhoistable lambdas.md","links":[{"resolvedRelTarget":{"contents":"Usage/Avoid%20work%20duplication%20using%20plet.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Avoid work duplication using plet.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Often times, you’ll be creating utility functions inside your Plutarch level functions that use free variables. In such cases, the function is unhoistable (i.e, you cannot use phoistAcyclic on it). However, it is likely that your goal is to use this utility function within your primary Plutarch level function several times. At which point, your unhoisted function will be inlined every time you use it and therefore increase script size."},"tags":[]},"parentNote":"Tricks.md","title":"Optimizing unhoistable lambdas","url":"Tricks/Optimizing%20unhoistable%20lambdas.html"},"Tricks/Plutarch functions strict.md":{"filePath":"Tricks/Plutarch functions strict.md","links":[{"resolvedRelTarget":{"contents":"Introduction/Delay%20and%20Force.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Delay and Force.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"All Plutarch functions are strict. When you apply a Plutarch function to an argument using papp (or #/#$ - synonyms to papp) - the argument will be evaluated before being passed into to the function. If you don’t want the argument to be evaluated, you can use pdelay."},"tags":[]},"parentNote":"Tricks.md","title":"Plutarch functions are strict","url":"Tricks/Plutarch%20functions%20strict.html"},"Tricks/Prefer Plutarch functions.md":{"filePath":"Tricks/Prefer Plutarch functions.md","links":[{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Hoisting.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Hoisting.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch level functions have a lot of advantages - they can be hoisted; they are strict so you can use their arguments however many times you like without duplicating work etc. Unless you really need laziness, like pif does, try to use Plutarch level functions."},"tags":[]},"parentNote":"Tricks.md","title":"Prefer Plutarch level functions","url":"Tricks/Prefer%20Plutarch%20functions.html"},"Tricks/Prefer matching on pmatch result immediately.md":{"filePath":"Tricks/Prefer matching on pmatch result immediately.md","links":[],"meta":{"page":{"description":"You should always try and pattern match on the result of pmatch immediately. This is because the semantics of pmatch will make anything you write before the pattern match be inlined for every single branch:"},"tags":[]},"parentNote":"Tricks.md","title":"Prefer matching on pmatch result immediately","url":"Tricks/Prefer%20matching%20on%20pmatch%20result%20immediately.html"},"Tricks/Prefer statically building constants.md":{"filePath":"Tricks/Prefer statically building constants.md","links":[{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Whenever you can build a Plutarch constant out of a pure Haskell value - do it! Functions such as pconstant, phexByteStr operate on regular Haskell synonyms of Plutarch types. Unlike pcon, which potentially works on Plutarch terms (e.g. pcon $ PJust x, x is a Term s a). A Plutarch term is an entirely runtime concept. Runtime as in Plutus Core Runtime. They only get evaluated during runtime!"},"tags":[]},"parentNote":"Tricks.md","title":"Prefer statically building constants","url":"Tricks/Prefer%20statically%20building%20constants.html"},"Tricks/Representation of Plutarch type.md":{"filePath":"Tricks/Representation of Plutarch type.md","links":[{"resolvedRelTarget":{"contents":"Usage/Deriving%20for%20newtypes.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving for newtypes.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Introduction/Plutarch%20Types.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Introduction/Plutarch Types.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"We’ve discussed before how Plutarch types are merely tags and don’t have a direct connection to their runtime representations. It’s important to be able to intuitively figure out the runtime representations from the data type declaration though. This is why most types follow certain conventions."},"tags":[]},"parentNote":"Tricks.md","title":"Figuring out the representation of a Plutarch type","url":"Tricks/Representation%20of%20Plutarch%20type.html"},"Tricks/Responsibility of evaluation in Haskell functions.md":{"filePath":"Tricks/Responsibility of evaluation in Haskell functions.md","links":[{"resolvedRelTarget":{"contents":"Usage/Avoid%20work%20duplication%20using%20plet.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Avoid work duplication using plet.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"We’ve discussed how a Haskell level function that operates on Plutarch level terms needs to be careful about work duplication. Related to this point, it’s good practice to design your Haskell level functions so that it takes responsibility for evaluation."},"tags":[]},"parentNote":"Tricks.md","title":"Let Haskell level functions take responsibility of evaluation","url":"Tricks/Responsibility%20of%20evaluation%20in%20Haskell%20functions.html"},"Tricks/Using Haskell level functions.md":{"filePath":"Tricks/Using Haskell level functions.md","links":[{"resolvedRelTarget":{"contents":"Tricks/Prefer%20Plutarch%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Prefer Plutarch functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/Plutarch%20functions%20strict.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Plutarch functions strict.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Although you should generally prefer Plutarch level functions, there are times when a Haskell level function is actually much better. However, figuring out when that is the case - is a delicate art."},"tags":[]},"parentNote":"Tricks.md","title":"Using Haskell level functions","url":"Tricks/Using%20Haskell%20level%20functions.html"},"Tricks/Working with bound fields.md":{"filePath":"Tricks/Working with bound fields.md","links":[],"meta":{"page":{"description":"You may have noticed that pletFields actually returns a Haskell level heterogenous list, with all the interesting fields bound to it. Only the fields you actually use from these bindings are extracted and put into the resulting script. Therefore, you only pay for what you use."},"tags":[]},"parentNote":"Tricks.md","title":"Working with bound fields","url":"Tricks/Working%20with%20bound%20fields.html"},"Tricks/makeIsDataIndexed, Haskell ADTs, and PIsDataRepr.md":{"filePath":"Tricks/makeIsDataIndexed, Haskell ADTs, and PIsDataRepr.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"When implementing PIsDataRepr for a Plutarch type, if the Plutarch type also has a Haskell synonym (e.g. ScriptContext is the Haskell synonym to PScriptContext) that uses makeIsDataIndexed - you must make sure the constructor ordering is correct."},"tags":[]},"parentNote":"Tricks.md","title":"The isomorphism between makeIsDataIndexed, Haskell ADTs, and PIsDataRepr","url":"Tricks/makeIsDataIndexed%2C%20Haskell%20ADTs%2C%20and%20PIsDataRepr.html"},"Troubleshooting.md":{"filePath":"Troubleshooting.md","links":[],"meta":{"page":{"description":"Note: If you spot any mistakes/have any related questions that this guide lacks the answer to, please don’t hesitate to raise an issue. The goal is to have high quality documentation for Plutarch users!"},"tags":[]},"parentNote":"index.md","title":"Troubleshooting","url":"Troubleshooting.html"},"Typeclasses.md":{"filePath":"Typeclasses.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PListLike.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PListLike.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIntegral.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIntegral.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PConstant%20and%20PLift.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PConstant and PLift.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This section describes the primary typeclasses used in Plutarch."},"tags":[]},"parentNote":"index.md","title":"Typeclasses","url":"Typeclasses.html"},"Typeclasses/PConstant and PLift.md":{"filePath":"Typeclasses/PConstant and PLift.md","links":[{"resolvedRelTarget":{"contents":"Types/PBool.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBool.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"DEVGUIDE.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"DEVGUIDE.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Haskell%20Synonym.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Haskell Synonym.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"These two closely tied together typeclasses establish a bridge between a Plutarch level type (that is represented as a builtin type, i.e. DefaultUni) and its corresponding Haskell synonym. The gory details of these two are not too useful to users, but you can read all about it if you want at Developers’ corner."},"tags":[]},"parentNote":"Typeclasses.md","title":"PConstant and PLift","url":"Typeclasses/PConstant%20and%20PLift.html"},"Typeclasses/PEq and POrd.md":{"filePath":"Typeclasses/PEq and POrd.md","links":[{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch level equality is provided by the PEq typeclass:"},"tags":[]},"parentNote":"Typeclasses.md","title":"PEq and POrd","url":"Typeclasses/PEq%20and%20POrd.html"},"Typeclasses/PIntegral.md":{"filePath":"Typeclasses/PIntegral.md","links":[],"meta":{"page":{"description":"This is similar to the Integral typeclass. However, it only has the following class methods:"},"tags":[]},"parentNote":"Typeclasses.md","title":"PIntegral","url":"Typeclasses/PIntegral.html"},"Typeclasses/PIsData.md":{"filePath":"Typeclasses/PIsData.md","links":[{"resolvedRelTarget":{"contents":"Types/PInteger.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PInteger.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PAsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PAsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"The PIsData typeclass facilitates easy and type safe conversion between Plutarch types and their corresponding BuiltinData/Data representation. It keeps track of the type information through PAsData."},"tags":[]},"parentNote":"Typeclasses.md","title":"PIsData","url":"Typeclasses/PIsData.html"},"Typeclasses/PIsDataRepr and PDataFields.md":{"filePath":"Typeclasses/PIsDataRepr and PDataFields.md","links":[{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20TermCont.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with TermCont.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20TermCont.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with TermCont.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PDataSum%20and%20PDataRecord.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PDataSum and PDataRecord.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PDataSum%20and%20PDataRecord.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PDataSum and PDataRecord.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Tricks/makeIsDataIndexed%2C%20Haskell%20ADTs%2C%20and%20PIsDataRepr.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/makeIsDataIndexed, Haskell ADTs, and PIsDataRepr.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"README.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"README.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Deriving PlutusType with DPTStrat PlutusTypeData allows for easily constructing and deconstructing Constr BuiltinData/Data values. It allows fully type safe matching on Data encoded values, without embedding type information within the generated script - unlike PlutusTx. PDataFields, on top of that, allows for ergonomic field access."},"tags":[]},"parentNote":"Typeclasses.md","title":"PIsDataRepr and PDataFields","url":"Typeclasses/PIsDataRepr%20and%20PDataFields.html"},"Typeclasses/PListLike.md":{"filePath":"Typeclasses/PListLike.md","links":[{"resolvedRelTarget":{"contents":"Types/PList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBuiltinList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBuiltinList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"The PListLike typeclass bestows beautiful and familiar list utilities to its instances. Plutarch has two list types- PBuiltinList and PList. Both have PListLike instances! However, PBuiltinList can only contain builtin types. That means that, for example, it cannot contain Plutarch functions. The element type of PBuiltinList can be constrained using PLift a => PBuiltinList a."},"tags":[]},"parentNote":"Typeclasses.md","title":"PListLike","url":"Typeclasses/PListLike.html"},"Typeclasses/PTryFrom.md":{"filePath":"Typeclasses/PTryFrom.md","links":[],"meta":{"page":{"description":"PTryFrom is a typeclass to prove equality between a type that in some way can’t be trusted about its representation and another type that we want the untrusted type to be represented as. PTryFrom proves the structure of the untrusted type and recovers it as the trusted, type which hence also carries more information."},"tags":[]},"parentNote":"Typeclasses.md","title":"PTryFrom","url":"Typeclasses/PTryFrom.html"},"Typeclasses/PlutusType, PCon, and PMatch.md":{"filePath":"Typeclasses/PlutusType, PCon, and PMatch.md","links":[{"resolvedRelTarget":{"contents":"Usage/Deriving%20for%20newtypes.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving for newtypes.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"PlutusType is the primary typeclass that determines the underlying representation for a Plutarch type. It lets you construct and deconstruct Plutus Core constants from a Plutarch type’s constructors (possibly containing other Plutarch terms)."},"tags":[]},"parentNote":"Typeclasses.md","title":"PlutusType, PCon, and PMatch","url":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html"},"Types.md":{"filePath":"Types.md","links":[{"resolvedRelTarget":{"contents":"Types/PUnit.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PUnit.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PTuple.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PTuple.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PString.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PString.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PInteger.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PInteger.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PDataSum%20and%20PDataRecord.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PDataSum and PDataRecord.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PByteString.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PByteString.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBuiltinPair.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBuiltinPair.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBuiltinList.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBuiltinList.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PBool.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PBool.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PAsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PAsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This section describes the fundamental, commonly used Plutarch types."},"tags":[]},"parentNote":"index.md","title":"Types","url":"Types.html"},"Types/PAsData.md":{"filePath":"Types/PAsData.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PIsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This is a typed way of representing BuiltinData/Data. It is highly encouraged you use PAsData to keep track of what species of Data value you actually have. Data can be a Constr (for sum of products - ADTs), Map (for wrapping assoc maps of Data to Data), List (for wrapping builtin lists of data), I (for wrapping builtin integers), and B (for wrapping builtin bytestrings)."},"tags":[]},"parentNote":"Types.md","title":"PAsData","url":"Types/PAsData.html"},"Types/PBool.md":{"filePath":"Types/PBool.md","links":[],"meta":{"page":{"description":"Plutarch level boolean terms can be constructed using pconstant True and pconstant False."},"tags":[]},"parentNote":"Types.md","title":"PBool","url":"Types/PBool.html"},"Types/PBuiltinList.md":{"filePath":"Types/PBuiltinList.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PListLike.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PListLike.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"You’ll be using builtin lists quite a lot in Plutarch. PBuiltinList has a PListLike instance, giving you access to all the goodies from there! However, PBuiltinList can only contain builtin types. In particular, it cannot contain Plutarch functions (which also implies it cannot contain scott-encoded datatypes)."},"tags":[]},"parentNote":"Types.md","title":"PBuiltinList","url":"Types/PBuiltinList.html"},"Types/PBuiltinPair.md":{"filePath":"Types/PBuiltinPair.md","links":[{"resolvedRelTarget":{"contents":"Types/PTuple.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PTuple.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Much like in the case of builtin lists, you’ll just be working with builtin functions (or rather, Plutarch synonyms to builtin functions) here. You can find everything about that in builtin-pairs. Feel free to only read the Plutarch examples."},"tags":[]},"parentNote":"Types.md","title":"PBuiltinPair","url":"Types/PBuiltinPair.html"},"Types/PByteString.md":{"filePath":"Types/PByteString.md","links":[],"meta":{"page":{"description":"Plutarch level bytestring terms can be created using phexByteStr and pconstant (pbyteStr is deprecated). phexByteStr interprets a hex string literal as a Term s PByteString and pconstant (pbyteStr) merely converts a ByteString into a Term s PByteString."},"tags":[]},"parentNote":"Types.md","title":"PByteString","url":"Types/PByteString.html"},"Types/PData.md":{"filePath":"Types/PData.md","links":[{"resolvedRelTarget":{"contents":"Types/PDataSum%20and%20PDataRecord.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PDataSum and PDataRecord.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Types/PAsData.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Types/PAsData.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"DEVGUIDE.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"DEVGUIDE.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This is a direct synonym to BuiltinData/Data. As such, it doesn’t keep track of what species of Data it actually is. Is it an I data? Is it a B data? Nobody can tell for sure!"},"tags":[]},"parentNote":"Types.md","title":"PData","url":"Types/PData.html"},"Types/PDataSum and PDataRecord.md":{"filePath":"Types/PDataSum and PDataRecord.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch sum and product types are represented using PDataSum and PDataRecord respectively. These types are crucial to the PIsDataRepr machinery."},"tags":[]},"parentNote":"Types.md","title":"PDataSum and PDataRecord","url":"Types/PDataSum%20and%20PDataRecord.html"},"Types/PInteger.md":{"filePath":"Types/PInteger.md","links":[],"meta":{"page":{"description":"Term s PInteger has a convenient Num instance that allows you to construct Plutarch level integer terms from integer literals. It also means you have all the typical arithmetic operations available to you:"},"tags":[]},"parentNote":"Types.md","title":"PInteger","url":"Types/PInteger.html"},"Types/PList.md":{"filePath":"Types/PList.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PListLike.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PListLike.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Here’s the Scott encoded cousin of `PBuiltinList`. What does that mean? Well, in practice, it just means that PList can contain any arbitrary term - not just builtin types. PList also has a PListLike instance - so you won’t be missing any of those utilities here!"},"tags":[]},"parentNote":"Types.md","title":"PList","url":"Types/PList.html"},"Types/PString.md":{"filePath":"Types/PString.md","links":[],"meta":{"page":{"description":"Term s PString has a IsString instance. This allows you to make Plutarch level string terms from regular string literals, provided you have OverloadedStrings turned on."},"tags":[]},"parentNote":"Types.md","title":"PString","url":"Types/PString.html"},"Types/PTuple.md":{"filePath":"Types/PTuple.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"These are data encoded pairs. You can build PTuples using ptuple:"},"tags":[]},"parentNote":"Types.md","title":"PTuple","url":"Types/PTuple.html"},"Types/PUnit.md":{"filePath":"Types/PUnit.md","links":[],"meta":{"page":{"description":"The Plutarch level unit term can be constructed using pconstant () or pcon PUnit."},"tags":[]},"parentNote":"Types.md","title":"PUnit","url":"Types/PUnit.html"},"Usage.md":{"filePath":"Usage.md","links":[{"resolvedRelTarget":{"contents":"Usage/Unsafe%20functions.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Unsafe functions.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Tracing.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Tracing.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Recursion.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Recursion.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Raising%20errors.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Raising errors.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Prelude%20mixin.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Prelude mixin.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20TermCont.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with TermCont.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20QualifiedDo.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with QualifiedDo.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Deriving%20with%20generics.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving with generics.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Deriving%20for%20newtypes.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Deriving for newtypes.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Conditionals.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Conditionals.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Usage/Avoid%20work%20duplication%20using%20plet.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Avoid work duplication using plet.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"This section describes various core Plutarch usage concepts."},"tags":[]},"parentNote":"index.md","title":"Usage","url":"Usage.html"},"Usage/Avoid work duplication using plet.md":{"filePath":"Usage/Avoid work duplication using plet.md","links":[{"resolvedRelTarget":{"contents":"Tricks/Don%27t%20duplicate%20work.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Tricks/Don't duplicate work.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Sometimes, when writing Haskell level functions working on Plutarch terms, you may find yourself needing to re-use the Haskell level function’s argument(s) multiple times:"},"tags":[]},"parentNote":"Usage.md","title":"Avoid work duplication using plet","url":"Usage/Avoid%20work%20duplication%20using%20plet.html"},"Usage/Conditionals.md":{"filePath":"Usage/Conditionals.md","links":[],"meta":{"page":{"description":"You can simulate if/then/else at the Plutarch level using pif:"},"tags":[]},"parentNote":"Usage.md","title":"Conditionals","url":"Usage/Conditionals.html"},"Usage/Deriving for newtypes.md":{"filePath":"Usage/Deriving for newtypes.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"If you’re defining a newtype to an existing Plutarch type, like so:"},"tags":[]},"parentNote":"Usage.md","title":"Deriving for newtypes","url":"Usage/Deriving%20for%20newtypes.html"},"Usage/Deriving with generics.md":{"filePath":"Usage/Deriving with generics.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PTryFrom.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PTryFrom.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PEq%20and%20POrd.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PEq and POrd.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Concepts/Data%20and%20Scott%20encoding.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Concepts/Data and Scott encoding.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Plutarch also provides sophisticated generic deriving support for completely custom types. In particular, you can easily derive PlutusType for your own type:"},"tags":[]},"parentNote":"Usage.md","title":"Deriving with generics","url":"Usage/Deriving%20with%20generics.html"},"Usage/Do syntax with QualifiedDo.md":{"filePath":"Usage/Do syntax with QualifiedDo.md","links":[],"meta":{"page":{"description":"In ghc92+ we can use do notation without using the Monad instances for some type by using overloaded syntax. This overloaded syntax is provided by the -XQualifiedDo extension"},"tags":[]},"parentNote":"Usage.md","title":"Do syntax with QualifiedDo","url":"Usage/Do%20syntax%20with%20QualifiedDo.html"},"Usage/Do syntax with TermCont.md":{"filePath":"Usage/Do syntax with TermCont.md","links":[{"resolvedRelTarget":{"contents":"Typeclasses/PlutusType%2C%20PCon%2C%20and%20PMatch.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PlutusType, PCon, and PMatch.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Note: The use of qualified do is preferred compared to the use of TermCont due to some shortcomings of the implementation of the Monad typeclass in base"},"tags":[]},"parentNote":"Usage.md","title":"Do syntax with TermCont","url":"Usage/Do%20syntax%20with%20TermCont.html"},"Usage/FFI.md":{"filePath":"Usage/FFI.md","links":[],"meta":{"page":{"description":"Note: This module needs the PlutusTx plugin. As it does not yet work under ghc92+, some of this documentation is not part of the CI, the documentation is up to date as of Plutarch 1.3."},"tags":[]},"parentNote":"Usage.md","title":"FFI","url":"Usage/FFI.html"},"Usage/Prelude mixin.md":{"filePath":"Usage/Prelude mixin.md","links":[],"meta":{"page":{"description":"Plutarch exports a Prelude (Plutarch.Prelude) that contains the most commonly used Plutarch functions, types and constructors."},"tags":[]},"parentNote":"Usage.md","title":"Using the Plutarch Prelude","url":"Usage/Prelude%20mixin.html"},"Usage/Raising errors.md":{"filePath":"Usage/Raising errors.md","links":[],"meta":{"page":{"description":"In PlutusTx, you’d signal validation failure with the error function. You can do the same in Plutarch using perror."},"tags":[]},"parentNote":"Usage.md","title":"Raising errors","url":"Usage/Raising%20errors.html"},"Usage/Recursion.md":{"filePath":"Usage/Recursion.md","links":[],"meta":{"page":{"description":"To emulate recursion in UPLC (Untyped Plutus Core), you need to use the Y combinator. Plutarch provides the Y combinator with the name pfix:"},"tags":[]},"parentNote":"Usage.md","title":"Recursion","url":"Usage/Recursion.html"},"Usage/Tracing.md":{"filePath":"Usage/Tracing.md","links":[],"meta":{"page":{"description":"You can use the functions ptrace, ptraceError, ptraceIfFalse, ptraceIfTrue (from Plutarch.Trace or Plutarch.Prelude) for tracing. These behave similarly to the ones you’re used to from PlutusTx."},"tags":[]},"parentNote":"Usage.md","title":"Tracing","url":"Usage/Tracing.html"},"Usage/Unsafe functions.md":{"filePath":"Usage/Unsafe functions.md","links":[],"meta":{"page":{"description":"There are internal functions such as punsafeCoerce, punsafeConstant etc. that give you terms without their specific type. These should not be used by Plutarch users. It is the duty of the user of these unsafe functions to get the type right - and it is very easy to get the type wrong. You can easily make the type system believe you’re creating a Term s PInteger, when in reality, you created a function."},"tags":[]},"parentNote":"Usage.md","title":"Unsafe functions","url":"Usage/Unsafe%20functions.html"},"examples.md":{"filePath":"examples.md","links":[],"meta":null,"parentNote":"index.md","title":"examples","url":"examples.html"},"examples/BASIC.md":{"filePath":"examples/BASIC.md","links":[{"resolvedRelTarget":{"contents":"README.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"README.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Note: If you spot any mistakes/have any related questions that this guide lacks the answer to, please don’t hesitate to raise an issue. The goal is to have high quality documentation for Plutarch users!"},"tags":[]},"parentNote":"examples.md","title":"BASIC","url":"examples/BASIC.html"},"examples/VALIDATOR.md":{"filePath":"examples/VALIDATOR.md","links":[{"resolvedRelTarget":{"contents":"Usage/Do%20syntax%20with%20TermCont.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Usage/Do syntax with TermCont.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"Typeclasses/PIsDataRepr%20and%20PDataFields.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"Typeclasses/PIsDataRepr and PDataFields.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}},{"resolvedRelTarget":{"contents":"README.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":{"contents":["LMLView_Html",{"contents":"README.md","tag":"LMLRoute_Md"}],"tag":"ModelRoute_LML"},"tag":"URTResource"}}],"meta":{"page":{"description":"Note: If you spot any mistakes/have any related questions that this guide lacks the answer to, please don’t hesitate to raise an issue. The goal is to have high quality documentation for Plutarch users!"},"tags":[]},"parentNote":"examples.md","title":"VALIDATOR","url":"examples/VALIDATOR.html"},"index.md":{"filePath":"index.md","links":[{"resolvedRelTarget":{"contents":"README.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","README"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"Introduction.html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","Introduction"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Plutarch - Haskell eDSL for writing Plutus Core"},"tags":[]},"parentNote":null,"title":"Plutarch Plutus","url":""}},"version":1}